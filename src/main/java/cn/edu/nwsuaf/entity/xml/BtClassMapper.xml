<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.nwsuaf.mapper.BtClassMapper">
    <resultMap id="BaseResultMap" type="cn.edu.nwsuaf.entity.BtClass">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="majorid" property="majorid" jdbcType="INTEGER"/>
        <result column="classteacherid" property="classteacherid" jdbcType="INTEGER"/>
        <result column="instructorid" property="instructorid" jdbcType="INTEGER"/>
        <result column="classno" property="classno" jdbcType="VARCHAR"/>
        <result column="classname" property="classname" jdbcType="VARCHAR"/>
        <result column="majorlength" property="majorlength" jdbcType="INTEGER"/>
        <result column="classsize" property="classsize" jdbcType="INTEGER"/>
    </resultMap>
    <select id="selectByTeacherid" resultMap="BaseResultMap">
        SELECT * FROM
        BT_CLASS ,TEACHER,BT_OPENCOURSE,BT_CLASSMERGING
        WHERE
        TEACHER.id=BT_OPENCOURSE.teacherid
        AND BT_OPENCOURSE.id=BT_CLASSMERGING.opencourseid
        AND BT_CLASSMERGING.classid=BT_CLASS.id
        <if test="teacherid != null">
            AND teacherid = #{teacherid}
        </if>
        ;
    </select>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, majorid, classteacherid, instructorid, classno, classname, majorlength, classsize
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.nwsuaf.entity.BtClassExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from BT_CLASS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from BT_CLASS
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from BT_CLASS
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.edu.nwsuaf.entity.BtClassExample">
        delete from BT_CLASS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.edu.nwsuaf.entity.BtClass">
    insert into BT_CLASS (id, majorid, classteacherid, 
      instructorid, classno, classname, 
      majorlength, classsize)
    values (#{id,jdbcType=INTEGER}, #{majorid,jdbcType=INTEGER}, #{classteacherid,jdbcType=INTEGER}, 
      #{instructorid,jdbcType=INTEGER}, #{classno,jdbcType=VARCHAR}, #{classname,jdbcType=VARCHAR}, 
      #{majorlength,jdbcType=INTEGER}, #{classsize,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="cn.edu.nwsuaf.entity.BtClass">
        insert into BT_CLASS
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="majorid != null">
                majorid,
            </if>
            <if test="classteacherid != null">
                classteacherid,
            </if>
            <if test="instructorid != null">
                instructorid,
            </if>
            <if test="classno != null">
                classno,
            </if>
            <if test="classname != null">
                classname,
            </if>
            <if test="majorlength != null">
                majorlength,
            </if>
            <if test="classsize != null">
                classsize,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="majorid != null">
                #{majorid,jdbcType=INTEGER},
            </if>
            <if test="classteacherid != null">
                #{classteacherid,jdbcType=INTEGER},
            </if>
            <if test="instructorid != null">
                #{instructorid,jdbcType=INTEGER},
            </if>
            <if test="classno != null">
                #{classno,jdbcType=VARCHAR},
            </if>
            <if test="classname != null">
                #{classname,jdbcType=VARCHAR},
            </if>
            <if test="majorlength != null">
                #{majorlength,jdbcType=INTEGER},
            </if>
            <if test="classsize != null">
                #{classsize,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.edu.nwsuaf.entity.BtClassExample" resultType="java.lang.Integer">
        select count(*) from BT_CLASS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update BT_CLASS
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.majorid != null">
                majorid = #{record.majorid,jdbcType=INTEGER},
            </if>
            <if test="record.classteacherid != null">
                classteacherid = #{record.classteacherid,jdbcType=INTEGER},
            </if>
            <if test="record.instructorid != null">
                instructorid = #{record.instructorid,jdbcType=INTEGER},
            </if>
            <if test="record.classno != null">
                classno = #{record.classno,jdbcType=VARCHAR},
            </if>
            <if test="record.classname != null">
                classname = #{record.classname,jdbcType=VARCHAR},
            </if>
            <if test="record.majorlength != null">
                majorlength = #{record.majorlength,jdbcType=INTEGER},
            </if>
            <if test="record.classsize != null">
                classsize = #{record.classsize,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update BT_CLASS
        set id = #{record.id,jdbcType=INTEGER},
        majorid = #{record.majorid,jdbcType=INTEGER},
        classteacherid = #{record.classteacherid,jdbcType=INTEGER},
        instructorid = #{record.instructorid,jdbcType=INTEGER},
        classno = #{record.classno,jdbcType=VARCHAR},
        classname = #{record.classname,jdbcType=VARCHAR},
        majorlength = #{record.majorlength,jdbcType=INTEGER},
        classsize = #{record.classsize,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nwsuaf.entity.BtClass">
        update BT_CLASS
        <set>
            <if test="majorid != null">
                majorid = #{majorid,jdbcType=INTEGER},
            </if>
            <if test="classteacherid != null">
                classteacherid = #{classteacherid,jdbcType=INTEGER},
            </if>
            <if test="instructorid != null">
                instructorid = #{instructorid,jdbcType=INTEGER},
            </if>
            <if test="classno != null">
                classno = #{classno,jdbcType=VARCHAR},
            </if>
            <if test="classname != null">
                classname = #{classname,jdbcType=VARCHAR},
            </if>
            <if test="majorlength != null">
                majorlength = #{majorlength,jdbcType=INTEGER},
            </if>
            <if test="classsize != null">
                classsize = #{classsize,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.nwsuaf.entity.BtClass">
    update BT_CLASS
    set majorid = #{majorid,jdbcType=INTEGER},
      classteacherid = #{classteacherid,jdbcType=INTEGER},
      instructorid = #{instructorid,jdbcType=INTEGER},
      classno = #{classno,jdbcType=VARCHAR},
      classname = #{classname,jdbcType=VARCHAR},
      majorlength = #{majorlength,jdbcType=INTEGER},
      classsize = #{classsize,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>