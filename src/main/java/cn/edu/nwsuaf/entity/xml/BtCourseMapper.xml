<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.nwsuaf.mapper.BtCourseMapper">
    <resultMap id="BaseResultMap" type="cn.edu.nwsuaf.entity.BtCourse">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="scoretypeid" property="scoretypeid" jdbcType="INTEGER"/>
        <result column="courseno" property="courseno" jdbcType="VARCHAR"/>
        <result column="coursename" property="coursename" jdbcType="VARCHAR"/>
        <result column="courseshort" property="courseshort" jdbcType="VARCHAR"/>
        <result column="credit" property="credit" jdbcType="REAL"/>
        <result column="totalhours" property="totalhours" jdbcType="REAL"/>
        <result column="theoryhours" property="theoryhours" jdbcType="REAL"/>
        <result column="experimentalhours" property="experimentalhours" jdbcType="REAL"/>
        <result column="practicalhours" property="practicalhours" jdbcType="REAL"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, scoretypeid, courseno, coursename, courseshort, credit, totalhours, theoryhours, 
    experimentalhours, practicalhours
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.nwsuaf.entity.BtCourseExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from BT_COURSE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from BT_COURSE
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from BT_COURSE
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.edu.nwsuaf.entity.BtCourseExample">
        delete from BT_COURSE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.edu.nwsuaf.entity.BtCourse">
    insert into BT_COURSE (id, scoretypeid, courseno, 
      coursename, courseshort, credit, 
      totalhours, theoryhours, experimentalhours, 
      practicalhours)
    values (#{id,jdbcType=INTEGER}, #{scoretypeid,jdbcType=INTEGER}, #{courseno,jdbcType=VARCHAR}, 
      #{coursename,jdbcType=VARCHAR}, #{courseshort,jdbcType=VARCHAR}, #{credit,jdbcType=REAL}, 
      #{totalhours,jdbcType=REAL}, #{theoryhours,jdbcType=REAL}, #{experimentalhours,jdbcType=REAL}, 
      #{practicalhours,jdbcType=REAL})
  </insert>
    <insert id="insertSelective" parameterType="cn.edu.nwsuaf.entity.BtCourse">
        insert into BT_COURSE
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="scoretypeid != null">
                scoretypeid,
            </if>
            <if test="courseno != null">
                courseno,
            </if>
            <if test="coursename != null">
                coursename,
            </if>
            <if test="courseshort != null">
                courseshort,
            </if>
            <if test="credit != null">
                credit,
            </if>
            <if test="totalhours != null">
                totalhours,
            </if>
            <if test="theoryhours != null">
                theoryhours,
            </if>
            <if test="experimentalhours != null">
                experimentalhours,
            </if>
            <if test="practicalhours != null">
                practicalhours,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="scoretypeid != null">
                #{scoretypeid,jdbcType=INTEGER},
            </if>
            <if test="courseno != null">
                #{courseno,jdbcType=VARCHAR},
            </if>
            <if test="coursename != null">
                #{coursename,jdbcType=VARCHAR},
            </if>
            <if test="courseshort != null">
                #{courseshort,jdbcType=VARCHAR},
            </if>
            <if test="credit != null">
                #{credit,jdbcType=REAL},
            </if>
            <if test="totalhours != null">
                #{totalhours,jdbcType=REAL},
            </if>
            <if test="theoryhours != null">
                #{theoryhours,jdbcType=REAL},
            </if>
            <if test="experimentalhours != null">
                #{experimentalhours,jdbcType=REAL},
            </if>
            <if test="practicalhours != null">
                #{practicalhours,jdbcType=REAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.edu.nwsuaf.entity.BtCourseExample" resultType="java.lang.Integer">
        select count(*) from BT_COURSE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update BT_COURSE
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.scoretypeid != null">
                scoretypeid = #{record.scoretypeid,jdbcType=INTEGER},
            </if>
            <if test="record.courseno != null">
                courseno = #{record.courseno,jdbcType=VARCHAR},
            </if>
            <if test="record.coursename != null">
                coursename = #{record.coursename,jdbcType=VARCHAR},
            </if>
            <if test="record.courseshort != null">
                courseshort = #{record.courseshort,jdbcType=VARCHAR},
            </if>
            <if test="record.credit != null">
                credit = #{record.credit,jdbcType=REAL},
            </if>
            <if test="record.totalhours != null">
                totalhours = #{record.totalhours,jdbcType=REAL},
            </if>
            <if test="record.theoryhours != null">
                theoryhours = #{record.theoryhours,jdbcType=REAL},
            </if>
            <if test="record.experimentalhours != null">
                experimentalhours = #{record.experimentalhours,jdbcType=REAL},
            </if>
            <if test="record.practicalhours != null">
                practicalhours = #{record.practicalhours,jdbcType=REAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update BT_COURSE
        set id = #{record.id,jdbcType=INTEGER},
        scoretypeid = #{record.scoretypeid,jdbcType=INTEGER},
        courseno = #{record.courseno,jdbcType=VARCHAR},
        coursename = #{record.coursename,jdbcType=VARCHAR},
        courseshort = #{record.courseshort,jdbcType=VARCHAR},
        credit = #{record.credit,jdbcType=REAL},
        totalhours = #{record.totalhours,jdbcType=REAL},
        theoryhours = #{record.theoryhours,jdbcType=REAL},
        experimentalhours = #{record.experimentalhours,jdbcType=REAL},
        practicalhours = #{record.practicalhours,jdbcType=REAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nwsuaf.entity.BtCourse">
        update BT_COURSE
        <set>
            <if test="scoretypeid != null">
                scoretypeid = #{scoretypeid,jdbcType=INTEGER},
            </if>
            <if test="courseno != null">
                courseno = #{courseno,jdbcType=VARCHAR},
            </if>
            <if test="coursename != null">
                coursename = #{coursename,jdbcType=VARCHAR},
            </if>
            <if test="courseshort != null">
                courseshort = #{courseshort,jdbcType=VARCHAR},
            </if>
            <if test="credit != null">
                credit = #{credit,jdbcType=REAL},
            </if>
            <if test="totalhours != null">
                totalhours = #{totalhours,jdbcType=REAL},
            </if>
            <if test="theoryhours != null">
                theoryhours = #{theoryhours,jdbcType=REAL},
            </if>
            <if test="experimentalhours != null">
                experimentalhours = #{experimentalhours,jdbcType=REAL},
            </if>
            <if test="practicalhours != null">
                practicalhours = #{practicalhours,jdbcType=REAL},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.nwsuaf.entity.BtCourse">
    update BT_COURSE
    set scoretypeid = #{scoretypeid,jdbcType=INTEGER},
      courseno = #{courseno,jdbcType=VARCHAR},
      coursename = #{coursename,jdbcType=VARCHAR},
      courseshort = #{courseshort,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=REAL},
      totalhours = #{totalhours,jdbcType=REAL},
      theoryhours = #{theoryhours,jdbcType=REAL},
      experimentalhours = #{experimentalhours,jdbcType=REAL},
      practicalhours = #{practicalhours,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>