<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.nwsuaf.mapper.StudentwarningMapper">
    <resultMap id="BaseResultMap" type="cn.edu.nwsuaf.entity.Studentwarning">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="warningtypeid" property="warningtypeid" jdbcType="INTEGER"/>
        <result column="warninglevelid" property="warninglevelid" jdbcType="INTEGER"/>
        <result column="yearid" property="yearid" jdbcType="INTEGER"/>
        <result column="semesterid" property="semesterid" jdbcType="INTEGER"/>
        <result column="studentid" property="studentid" jdbcType="INTEGER"/>
        <result column="warningdate" property="warningdate" jdbcType="DATE"/>
    </resultMap>
    <resultMap id="WarningModelMap" type="cn.edu.nwsuaf.model.WarningModel">
        <result column="warningtypename" property="warningType" jdbcType="VARCHAR"/>
        <result column="warninglevelname" property="warningLevel" jdbcType="VARCHAR"/>
        <result column="yearname" property="warningyear" jdbcType="VARCHAR"/>
        <result column="semestername" property="warningSemester" jdbcType="VARCHAR"/>
        <result column="warningdate" property="waringDate" jdbcType="DATE"/>
    </resultMap>
    <select id="selectWarningModelByExample" resultMap="WarningModelMap"
            parameterType="cn.edu.nwsuaf.entity.StudentwarningExample">
        select
        warningtypename,warninglevelname,yearname,semestername,warningdate

        from STUDENTWARNING,BT_YEAR,BT_SEMESTER,WARNINGLEVEL,WARNINGTYPE


        <if test="_parameter != null">

            <include refid="newExample_Where_Clause"/>
        </if>


        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>

    </select>
    <sql id="Example_Where_Clause">
        <where>

            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="newExample_Where_Clause">
        <where>
            STUDENTWARNING.warningtypeid=WARNINGTYPE.id
            AND STUDENTWARNING.warninglevelid=WARNINGLEVEL.id
            AND STUDENTWARNING.yearid=BT_YEAR.id
            AND STUDENTWARNING.semesterid=BT_SEMESTER.id
            AND
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, warningtypeid, warninglevelid, yearid, semesterid, studentid, warningdate
  </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.nwsuaf.entity.StudentwarningExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from STUDENTWARNING
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from STUDENTWARNING
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from STUDENTWARNING
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.edu.nwsuaf.entity.StudentwarningExample">
        delete from STUDENTWARNING
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.edu.nwsuaf.entity.Studentwarning">
    insert into STUDENTWARNING (id, warningtypeid, warninglevelid, 
      yearid, semesterid, studentid, 
      warningdate)
    values (#{id,jdbcType=INTEGER}, #{warningtypeid,jdbcType=INTEGER}, #{warninglevelid,jdbcType=INTEGER}, 
      #{yearid,jdbcType=INTEGER}, #{semesterid,jdbcType=INTEGER}, #{studentid,jdbcType=INTEGER}, 
      #{warningdate,jdbcType=DATE})
  </insert>
    <insert id="insertSelective" parameterType="cn.edu.nwsuaf.entity.Studentwarning">
        insert into STUDENTWARNING
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="warningtypeid != null">
                warningtypeid,
            </if>
            <if test="warninglevelid != null">
                warninglevelid,
            </if>
            <if test="yearid != null">
                yearid,
            </if>
            <if test="semesterid != null">
                semesterid,
            </if>
            <if test="studentid != null">
                studentid,
            </if>
            <if test="warningdate != null">
                warningdate,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="warningtypeid != null">
                #{warningtypeid,jdbcType=INTEGER},
            </if>
            <if test="warninglevelid != null">
                #{warninglevelid,jdbcType=INTEGER},
            </if>
            <if test="yearid != null">
                #{yearid,jdbcType=INTEGER},
            </if>
            <if test="semesterid != null">
                #{semesterid,jdbcType=INTEGER},
            </if>
            <if test="studentid != null">
                #{studentid,jdbcType=INTEGER},
            </if>
            <if test="warningdate != null">
                #{warningdate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.edu.nwsuaf.entity.StudentwarningExample"
            resultType="java.lang.Integer">
        select count(*) from STUDENTWARNING
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update STUDENTWARNING
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.warningtypeid != null">
                warningtypeid = #{record.warningtypeid,jdbcType=INTEGER},
            </if>
            <if test="record.warninglevelid != null">
                warninglevelid = #{record.warninglevelid,jdbcType=INTEGER},
            </if>
            <if test="record.yearid != null">
                yearid = #{record.yearid,jdbcType=INTEGER},
            </if>
            <if test="record.semesterid != null">
                semesterid = #{record.semesterid,jdbcType=INTEGER},
            </if>
            <if test="record.studentid != null">
                studentid = #{record.studentid,jdbcType=INTEGER},
            </if>
            <if test="record.warningdate != null">
                warningdate = #{record.warningdate,jdbcType=DATE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update STUDENTWARNING
        set id = #{record.id,jdbcType=INTEGER},
        warningtypeid = #{record.warningtypeid,jdbcType=INTEGER},
        warninglevelid = #{record.warninglevelid,jdbcType=INTEGER},
        yearid = #{record.yearid,jdbcType=INTEGER},
        semesterid = #{record.semesterid,jdbcType=INTEGER},
        studentid = #{record.studentid,jdbcType=INTEGER},
        warningdate = #{record.warningdate,jdbcType=DATE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nwsuaf.entity.Studentwarning">
        update STUDENTWARNING
        <set>
            <if test="warningtypeid != null">
                warningtypeid = #{warningtypeid,jdbcType=INTEGER},
            </if>
            <if test="warninglevelid != null">
                warninglevelid = #{warninglevelid,jdbcType=INTEGER},
            </if>
            <if test="yearid != null">
                yearid = #{yearid,jdbcType=INTEGER},
            </if>
            <if test="semesterid != null">
                semesterid = #{semesterid,jdbcType=INTEGER},
            </if>
            <if test="studentid != null">
                studentid = #{studentid,jdbcType=INTEGER},
            </if>
            <if test="warningdate != null">
                warningdate = #{warningdate,jdbcType=DATE},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.nwsuaf.entity.Studentwarning">
    update STUDENTWARNING
    set warningtypeid = #{warningtypeid,jdbcType=INTEGER},
      warninglevelid = #{warninglevelid,jdbcType=INTEGER},
      yearid = #{yearid,jdbcType=INTEGER},
      semesterid = #{semesterid,jdbcType=INTEGER},
      studentid = #{studentid,jdbcType=INTEGER},
      warningdate = #{warningdate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>