<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nwsuaf.mapper.StudentMapper">
    <resultMap id="BaseResultMap" type="cn.edu.nwsuaf.entity.Student">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="userid" jdbcType="INTEGER" property="userid"/>
        <result column="gradeid" jdbcType="INTEGER" property="gradeid"/>
        <result column="classid" jdbcType="INTEGER" property="classid"/>
        <result column="studentnumber" jdbcType="VARCHAR" property="studentnumber"/>
        <result column="studentname" jdbcType="VARCHAR" property="studentname"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="graduationdate" jdbcType="DATE" property="graduationdate"/>
        <result column="telephone" jdbcType="VARCHAR" property="telephone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="isroll" jdbcType="BIT" property="isroll"/>
        <result column="isinschool" jdbcType="BIT" property="isinschool"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="qq" jdbcType="VARCHAR" property="qq"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, userid, gradeid, classid, studentnumber, studentname, sex, graduationdate, telephone, 
    email, isroll, isinschool, status, qq
  </sql>
    <select id="selectByExample" parameterType="cn.edu.nwsuaf.entity.StudentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from STUDENT
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from STUDENT
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from STUDENT
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.edu.nwsuaf.entity.StudentExample">
        delete from STUDENT
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.edu.nwsuaf.entity.Student">
    insert into STUDENT (id, userid, gradeid, 
      classid, studentnumber, studentname, 
      sex, graduationdate, telephone, 
      email, isroll, isinschool, 
      status, qq)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{gradeid,jdbcType=INTEGER}, 
      #{classid,jdbcType=INTEGER}, #{studentnumber,jdbcType=VARCHAR}, #{studentname,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{graduationdate,jdbcType=DATE}, #{telephone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{isroll,jdbcType=BIT}, #{isinschool,jdbcType=BIT}, 
      #{status,jdbcType=TINYINT}, #{qq,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="cn.edu.nwsuaf.entity.Student">
        insert into STUDENT
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userid != null">
                userid,
            </if>
            <if test="gradeid != null">
                gradeid,
            </if>
            <if test="classid != null">
                classid,
            </if>
            <if test="studentnumber != null">
                studentnumber,
            </if>
            <if test="studentname != null">
                studentname,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="graduationdate != null">
                graduationdate,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="isroll != null">
                isroll,
            </if>
            <if test="isinschool != null">
                isinschool,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="qq != null">
                qq,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="gradeid != null">
                #{gradeid,jdbcType=INTEGER},
            </if>
            <if test="classid != null">
                #{classid,jdbcType=INTEGER},
            </if>
            <if test="studentnumber != null">
                #{studentnumber,jdbcType=VARCHAR},
            </if>
            <if test="studentname != null">
                #{studentname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="graduationdate != null">
                #{graduationdate,jdbcType=DATE},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="isroll != null">
                #{isroll,jdbcType=BIT},
            </if>
            <if test="isinschool != null">
                #{isinschool,jdbcType=BIT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="qq != null">
                #{qq,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.edu.nwsuaf.entity.StudentExample" resultType="java.lang.Integer">
        select count(*) from STUDENT
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update STUDENT
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userid != null">
                userid = #{record.userid,jdbcType=INTEGER},
            </if>
            <if test="record.gradeid != null">
                gradeid = #{record.gradeid,jdbcType=INTEGER},
            </if>
            <if test="record.classid != null">
                classid = #{record.classid,jdbcType=INTEGER},
            </if>
            <if test="record.studentnumber != null">
                studentnumber = #{record.studentnumber,jdbcType=VARCHAR},
            </if>
            <if test="record.studentname != null">
                studentname = #{record.studentname,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=VARCHAR},
            </if>
            <if test="record.graduationdate != null">
                graduationdate = #{record.graduationdate,jdbcType=DATE},
            </if>
            <if test="record.telephone != null">
                telephone = #{record.telephone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.isroll != null">
                isroll = #{record.isroll,jdbcType=BIT},
            </if>
            <if test="record.isinschool != null">
                isinschool = #{record.isinschool,jdbcType=BIT},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.qq != null">
                qq = #{record.qq,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update STUDENT
        set id = #{record.id,jdbcType=INTEGER},
        userid = #{record.userid,jdbcType=INTEGER},
        gradeid = #{record.gradeid,jdbcType=INTEGER},
        classid = #{record.classid,jdbcType=INTEGER},
        studentnumber = #{record.studentnumber,jdbcType=VARCHAR},
        studentname = #{record.studentname,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=VARCHAR},
        graduationdate = #{record.graduationdate,jdbcType=DATE},
        telephone = #{record.telephone,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        isroll = #{record.isroll,jdbcType=BIT},
        isinschool = #{record.isinschool,jdbcType=BIT},
        status = #{record.status,jdbcType=TINYINT},
        qq = #{record.qq,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nwsuaf.entity.Student">
        update STUDENT
        <set>
            <if test="userid != null">
                userid = #{userid,jdbcType=INTEGER},
            </if>
            <if test="gradeid != null">
                gradeid = #{gradeid,jdbcType=INTEGER},
            </if>
            <if test="classid != null">
                classid = #{classid,jdbcType=INTEGER},
            </if>
            <if test="studentnumber != null">
                studentnumber = #{studentnumber,jdbcType=VARCHAR},
            </if>
            <if test="studentname != null">
                studentname = #{studentname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="graduationdate != null">
                graduationdate = #{graduationdate,jdbcType=DATE},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="isroll != null">
                isroll = #{isroll,jdbcType=BIT},
            </if>
            <if test="isinschool != null">
                isinschool = #{isinschool,jdbcType=BIT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="qq != null">
                qq = #{qq,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.nwsuaf.entity.Student">
    update STUDENT
    set userid = #{userid,jdbcType=INTEGER},
      gradeid = #{gradeid,jdbcType=INTEGER},
      classid = #{classid,jdbcType=INTEGER},
      studentnumber = #{studentnumber,jdbcType=VARCHAR},
      studentname = #{studentname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      graduationdate = #{graduationdate,jdbcType=DATE},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      isroll = #{isroll,jdbcType=BIT},
      isinschool = #{isinschool,jdbcType=BIT},
      status = #{status,jdbcType=TINYINT},
      qq = #{qq,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>