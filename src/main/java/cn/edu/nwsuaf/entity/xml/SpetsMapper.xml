<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.nwsuaf.mapper.SpetsMapper">
    <resultMap id="BaseResultMap" type="cn.edu.nwsuaf.entity.Spets">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="studentid" property="studentid" jdbcType="INTEGER"/>
        <result column="spetsname" property="spetsname" jdbcType="VARCHAR"/>
        <result column="spetstime" property="spetstime" jdbcType="DATE"/>
        <result column="spetscore" property="spetscore" jdbcType="REAL"/>
    </resultMap>
    <select id="selectScoreLatestEaxm" resultMap="BaseResultMap">
    SELECT * FROM SPETS
    EXISTS (SELECT * FROM SPETS ORDER BY spetstime DESC L)
    GROUP BY spetsname

    SELECT   id, studentid, spetsname, MAX(spetstime), spetscore FROM SPETS GROUP BY spetsname
  </select>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, studentid, spetsname, spetstime, spetscore
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.nwsuaf.entity.SpetsExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from SPETS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from SPETS
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from SPETS
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.edu.nwsuaf.entity.SpetsExample">
        delete from SPETS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.edu.nwsuaf.entity.Spets">
    insert into SPETS (id, studentid, spetsname, 
      spetstime, spetscore)
    values (#{id,jdbcType=INTEGER}, #{studentid,jdbcType=INTEGER}, #{spetsname,jdbcType=VARCHAR}, 
      #{spetstime,jdbcType=DATE}, #{spetscore,jdbcType=REAL})
  </insert>
    <insert id="insertSelective" parameterType="cn.edu.nwsuaf.entity.Spets">
        insert into SPETS
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="studentid != null">
                studentid,
            </if>
            <if test="spetsname != null">
                spetsname,
            </if>
            <if test="spetstime != null">
                spetstime,
            </if>
            <if test="spetscore != null">
                spetscore,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="studentid != null">
                #{studentid,jdbcType=INTEGER},
            </if>
            <if test="spetsname != null">
                #{spetsname,jdbcType=VARCHAR},
            </if>
            <if test="spetstime != null">
                #{spetstime,jdbcType=DATE},
            </if>
            <if test="spetscore != null">
                #{spetscore,jdbcType=REAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.edu.nwsuaf.entity.SpetsExample" resultType="java.lang.Integer">
        select count(*) from SPETS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update SPETS
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.studentid != null">
                studentid = #{record.studentid,jdbcType=INTEGER},
            </if>
            <if test="record.spetsname != null">
                spetsname = #{record.spetsname,jdbcType=VARCHAR},
            </if>
            <if test="record.spetstime != null">
                spetstime = #{record.spetstime,jdbcType=DATE},
            </if>
            <if test="record.spetscore != null">
                spetscore = #{record.spetscore,jdbcType=REAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update SPETS
        set id = #{record.id,jdbcType=INTEGER},
        studentid = #{record.studentid,jdbcType=INTEGER},
        spetsname = #{record.spetsname,jdbcType=VARCHAR},
        spetstime = #{record.spetstime,jdbcType=DATE},
        spetscore = #{record.spetscore,jdbcType=REAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nwsuaf.entity.Spets">
        update SPETS
        <set>
            <if test="studentid != null">
                studentid = #{studentid,jdbcType=INTEGER},
            </if>
            <if test="spetsname != null">
                spetsname = #{spetsname,jdbcType=VARCHAR},
            </if>
            <if test="spetstime != null">
                spetstime = #{spetstime,jdbcType=DATE},
            </if>
            <if test="spetscore != null">
                spetscore = #{spetscore,jdbcType=REAL},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.nwsuaf.entity.Spets">
    update SPETS
    set studentid = #{studentid,jdbcType=INTEGER},
      spetsname = #{spetsname,jdbcType=VARCHAR},
      spetstime = #{spetstime,jdbcType=DATE},
      spetscore = #{spetscore,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>