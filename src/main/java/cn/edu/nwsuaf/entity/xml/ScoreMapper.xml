<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nwsuaf.mapper.ScoreMapper">
    <resultMap id="BaseResultMap" type="cn.edu.nwsuaf.entity.Score">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="opencourseid" jdbcType="INTEGER" property="opencourseid"/>
        <result column="scoremarkid" jdbcType="INTEGER" property="scoremarkid"/>
        <result column="studentid" jdbcType="INTEGER" property="studentid"/>
        <result column="totalscore" jdbcType="REAL" property="totalscore"/>
        <result column="finalscore" jdbcType="REAL" property="finalscore"/>
        <result column="dailyscore" jdbcType="REAL" property="dailyscore"/>
        <result column="statisticsdate" jdbcType="DATE" property="statisticsdate"/>
        <result column="passremark" jdbcType="VARCHAR" property="passremark"/>
    </resultMap>
    <resultMap id="CourseTupleMap" type="cn.edu.nwsuaf.model.CourseTuple">
        <result column="courseTotalNum" property="courseTotalNum" jdbcType="INTEGER"/>
        <result column="courseTotalCredit" property="courseTotalCredit" jdbcType="INTEGER"/>
    </resultMap>
    <select id="selectPassedNumAndCredit" resultMap="CourseTupleMap">

        SELECT count(*) as courseTotalNum, sum(credit) as courseTotalCredit
        FROM BT_OPENCOURSE,SCORE,BT_YEAR,BT_SEMESTER,BT_COURSE,BT_COURSENATURE
        WHERE
        SCORE.opencourseid=BT_OPENCOURSE.id
        AND SCORE.passremark='0'
        AND BT_OPENCOURSE.courseid=BT_COURSE.id
        AND BT_OPENCOURSE.yearid=BT_YEAR.id
        AND BT_OPENCOURSE.semesterid=BT_SEMESTER.id
        AND BT_OPENCOURSE.coursenatureid=BT_COURSENATURE.id
        <if test="studentid != null">
            AND SCORE.studentid=#{studentid}
        </if>
        <if test="yearname != null">
            AND BT_YEAR.yearname=#{yearname}
        </if>
        <if test="semestername != null">
            AND BT_SEMESTER.semestername=#{semestername}
        </if>
        <if test="coursenaturename != null">
            AND BT_COURSENATURE.coursenaturename=#{coursenaturename}
        </if>;

    </select>
    <select id="selectSelectedNumAndCredit" resultMap="CourseTupleMap">

        SELECT count(*) as courseTotalNum, sum(credit) as courseTotalCredit
        FROM BT_OPENCOURSE,SCORE,BT_YEAR,BT_SEMESTER,BT_COURSE,BT_COURSENATURE
        WHERE
        SCORE.opencourseid=BT_OPENCOURSE.id
        AND BT_OPENCOURSE.courseid=BT_COURSE.id
        AND BT_OPENCOURSE.yearid=BT_YEAR.id
        AND BT_OPENCOURSE.semesterid=BT_SEMESTER.id
        AND BT_OPENCOURSE.coursenatureid=BT_COURSENATURE.id
        <if test="studentid != null">
            AND SCORE.studentid=#{studentid}
        </if>
        <if test="yearname != null">
            AND BT_YEAR.yearname=#{yearname}
        </if>
        <if test="semestername != null">
            AND BT_SEMESTER.semestername=#{semestername}
        </if>
        <if test="coursenaturename != null">
            AND BT_COURSENATURE.coursenaturename=#{coursenaturename}
        </if>;

    </select>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, opencourseid, scoremarkid, studentid, totalscore, finalscore, dailyscore, statisticsdate, 
    passremark
  </sql>
    <select id="selectByExample" parameterType="cn.edu.nwsuaf.entity.ScoreExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from SCORE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from SCORE
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from SCORE
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.edu.nwsuaf.entity.ScoreExample">
        delete from SCORE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.edu.nwsuaf.entity.Score">
    insert into SCORE (id, opencourseid, scoremarkid, 
      studentid, totalscore, finalscore, 
      dailyscore, statisticsdate, passremark
      )
    values (#{id,jdbcType=INTEGER}, #{opencourseid,jdbcType=INTEGER}, #{scoremarkid,jdbcType=INTEGER}, 
      #{studentid,jdbcType=INTEGER}, #{totalscore,jdbcType=REAL}, #{finalscore,jdbcType=REAL}, 
      #{dailyscore,jdbcType=REAL}, #{statisticsdate,jdbcType=DATE}, #{passremark,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="cn.edu.nwsuaf.entity.Score">
        insert into SCORE
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="opencourseid != null">
                opencourseid,
            </if>
            <if test="scoremarkid != null">
                scoremarkid,
            </if>
            <if test="studentid != null">
                studentid,
            </if>
            <if test="totalscore != null">
                totalscore,
            </if>
            <if test="finalscore != null">
                finalscore,
            </if>
            <if test="dailyscore != null">
                dailyscore,
            </if>
            <if test="statisticsdate != null">
                statisticsdate,
            </if>
            <if test="passremark != null">
                passremark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="opencourseid != null">
                #{opencourseid,jdbcType=INTEGER},
            </if>
            <if test="scoremarkid != null">
                #{scoremarkid,jdbcType=INTEGER},
            </if>
            <if test="studentid != null">
                #{studentid,jdbcType=INTEGER},
            </if>
            <if test="totalscore != null">
                #{totalscore,jdbcType=REAL},
            </if>
            <if test="finalscore != null">
                #{finalscore,jdbcType=REAL},
            </if>
            <if test="dailyscore != null">
                #{dailyscore,jdbcType=REAL},
            </if>
            <if test="statisticsdate != null">
                #{statisticsdate,jdbcType=DATE},
            </if>
            <if test="passremark != null">
                #{passremark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.edu.nwsuaf.entity.ScoreExample" resultType="java.lang.Integer">
        select count(*) from SCORE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update SCORE
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.opencourseid != null">
                opencourseid = #{record.opencourseid,jdbcType=INTEGER},
            </if>
            <if test="record.scoremarkid != null">
                scoremarkid = #{record.scoremarkid,jdbcType=INTEGER},
            </if>
            <if test="record.studentid != null">
                studentid = #{record.studentid,jdbcType=INTEGER},
            </if>
            <if test="record.totalscore != null">
                totalscore = #{record.totalscore,jdbcType=REAL},
            </if>
            <if test="record.finalscore != null">
                finalscore = #{record.finalscore,jdbcType=REAL},
            </if>
            <if test="record.dailyscore != null">
                dailyscore = #{record.dailyscore,jdbcType=REAL},
            </if>
            <if test="record.statisticsdate != null">
                statisticsdate = #{record.statisticsdate,jdbcType=DATE},
            </if>
            <if test="record.passremark != null">
                passremark = #{record.passremark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update SCORE
        set id = #{record.id,jdbcType=INTEGER},
        opencourseid = #{record.opencourseid,jdbcType=INTEGER},
        scoremarkid = #{record.scoremarkid,jdbcType=INTEGER},
        studentid = #{record.studentid,jdbcType=INTEGER},
        totalscore = #{record.totalscore,jdbcType=REAL},
        finalscore = #{record.finalscore,jdbcType=REAL},
        dailyscore = #{record.dailyscore,jdbcType=REAL},
        statisticsdate = #{record.statisticsdate,jdbcType=DATE},
        passremark = #{record.passremark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nwsuaf.entity.Score">
        update SCORE
        <set>
            <if test="opencourseid != null">
                opencourseid = #{opencourseid,jdbcType=INTEGER},
            </if>
            <if test="scoremarkid != null">
                scoremarkid = #{scoremarkid,jdbcType=INTEGER},
            </if>
            <if test="studentid != null">
                studentid = #{studentid,jdbcType=INTEGER},
            </if>
            <if test="totalscore != null">
                totalscore = #{totalscore,jdbcType=REAL},
            </if>
            <if test="finalscore != null">
                finalscore = #{finalscore,jdbcType=REAL},
            </if>
            <if test="dailyscore != null">
                dailyscore = #{dailyscore,jdbcType=REAL},
            </if>
            <if test="statisticsdate != null">
                statisticsdate = #{statisticsdate,jdbcType=DATE},
            </if>
            <if test="passremark != null">
                passremark = #{passremark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.nwsuaf.entity.Score">
    update SCORE
    set opencourseid = #{opencourseid,jdbcType=INTEGER},
      scoremarkid = #{scoremarkid,jdbcType=INTEGER},
      studentid = #{studentid,jdbcType=INTEGER},
      totalscore = #{totalscore,jdbcType=REAL},
      finalscore = #{finalscore,jdbcType=REAL},
      dailyscore = #{dailyscore,jdbcType=REAL},
      statisticsdate = #{statisticsdate,jdbcType=DATE},
      passremark = #{passremark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>